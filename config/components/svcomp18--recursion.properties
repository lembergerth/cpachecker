# ----------------------------------------------------------------------
# This configuration file uses a combination of block abstraction memoisation
# and predicate-analysis to verify recursive procedures.
# ----------------------------------------------------------------------

#include ../valuePredicateAnalysis-bam-rec.properties


# strategy is very important for recursion!
# we use Mathsat as solver, because it is used
# in the rest of the svcomp18-configurations.
# Mathsat has no direct tree-itp-support,
# but we can simulate it through nested interpolation.

solver.solver=MATHSAT5
cpa.predicate.refinement.strategy = tree_nested

# COW avoids a bug in the refinement implementation.
cpa.bam.useCopyOnWriteRefinement = true

# abort before running into stackoverflow.
# This option would be nice for SV-Comp,
# but we decided against a bounded analysis!
# cpa.bam.maximalDepthForExplicitRecursion = 100

cpa.callstack.skipVoidRecursion = true

limits.time.cpu::required =
